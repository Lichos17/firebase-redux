import { db } from "../firebase/firebase-config";
import { loadTodos } from "../helpers/loadTodos";
import { types } from "../types/types";



export const startAddTodo = (  ) => {

  return async( dispatch, getState ) => {
    const uid = getState().auth.uid;

    const newTodo = {
      description: ''
    }
    const doc = await db.collection(`${uid}/todos/content`).add( newTodo );

    dispatch( activeTodo( doc.id, newTodo ) );
  }
}

export const activeTodo = ( id, todo ) => ({
  type: types.todosActive,
  payload: {
    id,
    ...todo
  }
});

export const removeActiveTodo = () => ({
  type: types.todosRemoveActive
}
)

export const startLoadingTodos = ( uid ) => {
  return async( dispatch ) => {
    const todos =  await loadTodos( uid );
    dispatch( setTodos( todos ) )
  }
}


export const setTodos = ( todos ) => ({
  type: types.todosLoad,
  payload: todos
});

export const startSaveTodo = ( todo ) => {

  return async( dispatch, getState ) => {

    const { uid } = getState().auth;

    const todoToFirestore = { ...todo };

    delete todoToFirestore.id;

    await db.doc(`${ uid }/todos/content/${ todo.id }`).update( todoToFirestore );

    dispatch( startLoadingTodos( uid ) ) ;
  }
}

export const startDeleting = ( id ) => {
  return async( dispatch, getState ) => {
    const uid = getState().auth.uid;
    await db.doc( `${ uid }/todos/content/${id}` ).delete();

    dispatch( deleteNote(id) )

  }
}

export const deleteNote = ( id ) => ({
  type: types.todosDelete,
  payload: id
});

export const todoLogout = () => ({
  type: types.todosLogoutCleaning
});